{"version":3,"sources":["AbstractSyntaxTree/AstNode.js","AbstractSyntaxTree/operations.js","AbstractSyntaxTree/Types.js","AbstractSyntaxTree/Token.js","AbstractSyntaxTree/buildAst.js","reducers/calculator.js","hooks/useCalculator.js","constants/buttons.js","components/Calculator/Frame.style.js","components/Calculator/DigitalDisplay.style.js","components/Calculator/Buttons.style.js","hooks/useKey.js","components/Calculator/CalculatorButton.js","components/Calculator/index.js","components/App.js","serviceWorker.js","index.js"],"names":["AstNode","token","this","left","right","astNode","isNumber","parseFloat","value","isOperation","getOperationConfig","argCount","func","solve","Error","Operations","ADD","SUBTRACT","MULTIPLY","String","fromCharCode","DIVIDE","EXPONENT","operationList","Object","values","OperationConfig","precedence","x","y","Types","OPERATION","NUMBER","LEFT_PARENTHESIS","RIGHT_PARENTHESIS","getType","str","includes","length","isNaN","Token","type","peek","arr","buildAst","tokens","operations","astNodes","popOperationToAst","pop","setRight","setLeft","push","forEach","addNumberToAst","isLeftParenthesis","initial","formula","result","removeLeadingZero","number","slice","isSolved","hasOpenParenthesis","reduce","reduceOpenParenthesis","open","isRightParenthesis","calculator","key","last","secondLast","appendToLast","part","addItem","item","insertBeforeLast","replaceLast","replaceLastTwo","removeLast","noChange","err","useCalculator","useReducer","dispatch","press","useCallback","displayCurrent","displayFormula","map","join","buttons","id","label","keyBinding","Frame","styled","div","DigitalDisplay","size","Buttons","canUseDOM","window","document","createElement","useKey","handler","keys","onKeyDown","useEffect","addEventListener","removeEventListener","console","error","CalculatorButton","props","onClick","bg","m","Calculator","button","index","sx","gridArea","App","useFccTest","fccTest","FccTests","javascript_calculator","queryParam","alignItems","justifyContent","height","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.682e8e43.chunk.js","sourcesContent":["class AstNode {\n    constructor(token) {\n        this.token = token;\n\n        this.left = null;\n        this.right = null;\n    }\n\n    setRight(astNode) {\n        this.right = astNode;\n    }\n\n    setLeft(astNode) {\n        this.left = astNode;\n    }\n\n    solve() {\n        if (this.token.isNumber()) {\n            return parseFloat(this.token.value);\n        } else if (this.token.isOperation()) {\n            const {argCount, func} = this.token.getOperationConfig();\n            if (argCount === 1 && this.left !== null) {\n                return func(this.left.solve());\n            } else if (argCount === 2 && this.left !== null && this.right !== null) {\n                return func(this.left.solve(), this.right.solve());\n            }\n            \n        }\n        \n        //otherwise\n        throw Error('invalid token type in AST');\n    }\n}\n\nexport default AstNode;","const Operations = {\n    ADD: '+', \n    SUBTRACT: '-', \n    MULTIPLY: String.fromCharCode(215), \n    DIVIDE: String.fromCharCode(247), \n    EXPONENT: '^'\n};\nexport default Operations;\n\nexport const operationList = Object.values(Operations);\nexport const isOperation = str => operationList.includes(str);\n\nexport const OperationConfig = {\n    [Operations.ADD]: {\n        precedence: 1,\n        argCount: 2,\n        func: (x,y) => x+y\n    },\n    [Operations.SUBTRACT]: {\n        precedence: 1,\n        argCount: 2,\n        func: (x,y) => x-y\n    },\n    [Operations.MULTIPLY]: {\n        precedence: 2,\n        argCount: 2,\n        func: (x,y) => x*y\n    },\n    [Operations.DIVIDE]: {\n        precedence: 2,\n        argCount: 2,\n        func: (x,y) => x/y\n    },\n    [Operations.EXPONENT]: {\n        precedence: 3,\n        argCount: 2,\n        func: (x,y) => x**y\n    }\n};\n","const Types = {\n    OPERATION: 0,\n    NUMBER: 1,\n    LEFT_PARENTHESIS: 2,\n    RIGHT_PARENTHESIS: 3\n};\n\nexport default Types;","import { isOperation, OperationConfig } from './operations';\nimport Types from './Types';\n\nconst isNumber = value => {\n    if (value.length === 1 && '0123456789'.includes(value)) {\n        return true;\n    } else {\n        return !isNaN(parseFloat(value));\n    }\n};\n\nconst getType = value => {\n    if (isOperation(value)) {\n        return Types.OPERATION;\n    } else if (value === '(') {\n        return Types.LEFT_PARENTHESIS;\n    } else if (value === ')') {\n        return Types.RIGHT_PARENTHESIS;\n    } else if (isNumber(value)) {\n        return Types.NUMBER;\n    } else {\n        return undefined;\n    }\n};\n\nclass Token {\n    constructor(value) {\n        this.value = value;\n        this.type = getType(value);\n    }\n\n    isOperation() {\n        return this.type === Types.OPERATION;\n    }\n\n    isLeftParenthesis() {\n        return this.type === Types.LEFT_PARENTHESIS;\n    }\n\n    isRightParenthesis() {\n        return this.type === Types.RIGHT_PARENTHESIS;\n    }\n\n    isNumber() {\n        return this.type === Types.NUMBER;\n    }\n\n    getOperationConfig() {\n        return OperationConfig[this.value];\n    }\n}\n \nexport default Token;","import Types from './Types';\nimport AstNode from './AstNode';\n\nconst peek = arr => arr[arr.length - 1];\n\nconst buildAst = tokens => {\n    const operations = [];\n    const astNodes = [];\n\n    const addNumberToAst = token => astNodes.push(new AstNode(token));\n    const popOperationToAst = () => {\n        const token = operations.pop();\n        const astNode = new AstNode(token);\n        \n        const { argCount } = token.getOperationConfig();\n        if (argCount > 1) {\n            astNode.setRight(astNodes.pop());\n        }\n        astNode.setLeft(astNodes.pop());\n\n        astNodes.push(astNode);\n    };\n\n    tokens.forEach(token => {\n        switch(token.type) {\n        case Types.NUMBER:\n            addNumberToAst(token);\n            break;\n        case Types.LEFT_PARENTHESIS:\n            operations.push(token);\n            break;\n        case Types.RIGHT_PARENTHESIS:\n            while (operations.length > 0 && !peek(operations).isLeftParenthesis()) {\n                popOperationToAst();\n            }\n            operations.pop(); //pop left parenthesis\n            break;\n        case Types.OPERATION:\n            while (operations.length > 0 \n                    && !peek(operations).isLeftParenthesis() \n                    && peek(operations).getOperationConfig().precedence >= token.getOperationConfig().precedence) {\n                popOperationToAst();\n            }\n            operations.push(token);\n            break;\n        default:\n        }\n    });\n\n    while (operations.length > 0) {\n        popOperationToAst();\n    }\n\n    return astNodes.pop();\n};\n\nexport default buildAst;","import { Operations, Token, Types, buildAst } from '../AbstractSyntaxTree';\n\nexport const initial = [new Token('0')];\n\nconst solve = formula => {\n    const ast = buildAst(formula);\n    const result = ast.solve();\n    return new Token(result);\n};\n\nconst removeLeadingZero = (number) => {\n    if (number[0] === '0') {\n        if (number[1] === '.') {\n            return number;\n        } else {\n            return number.slice(1);\n        }\n    } else {\n        return number;\n    }\n};\n\nconst isSolved = formula => formula.length > 2 && formula[formula.length-2].value === '=';\n\nconst hasOpenParenthesis = formula => formula.reduce(reduceOpenParenthesis, 0) > 0;\n\nconst reduceOpenParenthesis = (open, token) => {\n    if (token.isLeftParenthesis())\n        return open + 1;\n    else if (token.isRightParenthesis())\n        return open - 1;\n    else\n        return open;\n};\n\nconst calculator = (formula = initial, { key }) => {\n    const token = new Token(key);\n\n    const last = formula[formula.length - 1];\n    const secondLast = formula[formula.length - 2];\n\n    if (isSolved(formula)) {\n        if (token.isOperation()) {\n            return calculator([last], { key });\n        } else {\n            return calculator(initial, { key });\n        }\n    }\n    \n    const appendToLast = (part = token.value) => [...formula.slice(0,-1), new Token(removeLeadingZero(last.value + part))];\n    const addItem = (item = token) => [...formula, item instanceof Token ? item : new Token(item)];\n    const insertBeforeLast = (item = token) => [...formula.slice(0,-1), item, last];\n    const replaceLast = (item = token) => [...formula.slice(0,-1), item];\n    const replaceLastTwo = (item = token) => [...formula.slice(0,-2), item];\n    const removeLast = () => formula.slice(0,-1);\n    const noChange = () => formula;\n    \n       \n    switch(token.value) {\n    case 'C':\n        return initial;\n    case '=':\n        try {\n            return [...formula, token, solve(formula)];\n        }\n        catch (err) {\n            return noChange();\n        }\n    case '.':\n        if (last.isNumber()) {\n            if (last.value.includes('.')) {\n                return noChange();\n            } else {\n                return appendToLast();\n            }\n        } else if (last.isLeftParenthesis() || last.isOperation()) {\n            return addItem('0.');\n        } else if (last.value === Operations.SUBTRACT \n            && (secondLast.isOperation() || secondLast.isLeftParenthesis())) {\n            return appendToLast('0.');\n        }\n        break;\n    case '-':\n        if (last.value === Operations.SUBTRACT \n            && (secondLast.isOperation() || secondLast.isRightParenthesis())) {\n            return removeLast();\n        } else if (last.isLeftParenthesis() || last.isOperation() || last.isNumber() || last.isRightParenthesis()) {\n            return addItem();\n        }\n        break;\n    default:\n        switch(token.type) {\n        case Types.NUMBER:\n            if (last.isNumber()) {\n                return appendToLast();\n            } else if (last.value === Operations.SUBTRACT \n                && (secondLast.isOperation() || secondLast.isLeftParenthesis())) {\n                return appendToLast();\n            } else if (last.isLeftParenthesis() || last.isOperation()) {\n                return addItem();\n            }\n            break;\n        case Types.LEFT_PARENTHESIS:\n            if (last.isLeftParenthesis() || last.isOperation()) {\n                return addItem();\n            } else if (last.isNumber()) {\n                return insertBeforeLast();\n            }\n            break;\n        case Types.RIGHT_PARENTHESIS:\n            if ((last.isNumber() || last.isRightParenthesis())\n                && hasOpenParenthesis(formula)) {\n                return addItem();\n            }\n            break;\n        case Types.OPERATION:\n            if (last.isNumber() || last.isRightParenthesis()) {\n                return addItem();\n            } else if (last.value === Operations.SUBTRACT && secondLast.isOperation()) {\n                return replaceLastTwo();\n            } else if (last.value === Operations.SUBTRACT && secondLast.isLeftParenthesis()) {\n                return noChange();\n            } else if (last.isOperation()) {\n                return replaceLast();\n            }\n            break;\n        default:\n        }\n    }\n\n    \n\n    return noChange();\n\n};\n\nexport default calculator;","import { useReducer, useCallback } from 'react';\nimport calculator, { initial } from '../reducers/calculator';\n\nconst useCalculator = () => {\n    const [formula, dispatch] = useReducer(calculator, initial);\n\n    const press = useCallback(\n        (key) => dispatch({key}), \n        [dispatch]\n    );\n\n    return {\n        displayCurrent: formula[formula.length-1].value, \n        displayFormula: formula.map(token => token.value).join(''), \n        press\n    };\n};\n\nexport default useCalculator;","import { Operations } from '../AbstractSyntaxTree';\n\nconst buttons = [\n    {\n        id: 'clear',\n        label: 'C',\n        keyBinding: ['c', 'C']\n    },\n    {\n        id: 'open-parenthesis',\n        label: '(',\n        keyBinding: '('\n    },\n    {\n        id: 'close-parenthesis',\n        label: ')',\n        keyBinding: ')'\n    },\n    {\n        id: 'exponent',\n        label: Operations.EXPONENT,\n        keyBinding: '^'\n    },\n    {\n        id: 'seven',\n        label: '7',\n        keyBinding: '7'\n    },\n    {\n        id: 'eight',\n        label: '8',\n        keyBinding: '8'\n    },\n    {\n        id: 'nine',\n        label: '9',\n        keyBinding: '9'\n    },\n    {\n        id: 'add',\n        label: Operations.ADD,\n        keyBinding: '+'\n    },\n    {\n        id: 'four',\n        label: '4',\n        keyBinding: '4'\n    },\n    {\n        id: 'five',\n        label: '5',\n        keyBinding: '5'\n    },\n    {\n        id: 'six',\n        label: '6',\n        keyBinding: '6'\n    },\n    {\n        id: 'subtract',\n        label: Operations.SUBTRACT,\n        keyBinding: '-'\n    },\n    {\n        id: 'one',\n        label: '1',\n        keyBinding: '1'\n    },\n    {\n        id: 'two',\n        label: '2',\n        keyBinding: '2'\n    },\n    {\n        id: 'three',\n        label: '3',\n        keyBinding: '3'\n    },\n    {\n        id: 'multiply',\n        label: Operations.MULTIPLY,\n        keyBinding: '*'\n    },\n    {\n        id: 'zero',\n        label: '0',\n        keyBinding: '0'\n    },\n    {\n        id: 'decimal',\n        label: '.',\n        keyBinding: '.'\n    },\n    {\n        id: 'equals',\n        label: '=',\n        keyBinding: ['=', 'Enter']\n    },\n    {\n        id: 'divide',\n        label: Operations.DIVIDE,\n        keyBinding: '/'\n    }\n];\n\nexport default buttons;","import styled from 'styled-components';\n\nconst Frame = styled.div`\n    background: #555;\n    border-radius: 3px;\n    padding: 4px;\n`;\n\nexport default Frame;\n","import styled from 'styled-components';\n\nconst DigitalDisplay = styled.div`\n    margin: 4px;\n    padding: 4px;\n    background: #010;\n    color: #3C3;\n    font-family: 'Digital';\n    line-height: 1;\n    text-align: right;\n    overflow-wrap: break-word;\n    font-size: ${({size}) => size === 'big' ? '24px' : '16px'};\n    @media (orientation: portrait) {\n        width: 184px;\n    }\n    @media (orientation: landscape) {\n        width: 234px;\n    }\n`;\n\nexport default DigitalDisplay;\n","import styled from 'styled-components';\n\nconst Buttons = styled.div`\n    display: grid;\n    justify-items: stretch;\n    align-items: stretch;\n    @media (orientation: portrait) {\n        grid-template-columns: repeat(4, 50px);\n        grid-template-rows: repeat(5, 50px);\n        grid-template-areas:\n            \"clear open-parenthesis close-parenthesis exponent\"\n            \"seven eight nine add\"\n            \"four five six subtract\"\n            \"one two three multiply\"\n            \"zero decimal equals divide\";\n    }\n    @media (orientation: landscape) {\n        grid-template-columns: repeat(5, 50px);\n        grid-template-rows: repeat(4, 50px);\n        grid-template-areas:\n            \"seven eight nine add clear\"\n            \"four five six subtract open-parenthesis\"\n            \"one two three multiply close-parenthesis\"\n            \"zero decimal equals divide exponent\";\n    }    \n`;\n\nexport default Buttons;\n","import { useCallback, useEffect } from 'react';\n\nconst canUseDOM = !!(\n    (typeof window !== 'undefined' &&\n        window.document && window.document.createElement)\n);\n\nconst useKey = (handler, keys) => {\n    const onKeyDown = useCallback(\n        ({ key }) => {\n            if (keys.includes(key)) {\n                handler(key);\n            }\n        },\n        [handler, keys]);\n\n    useEffect(() => {\n        if (!canUseDOM) {\n            console.error('window is not defined');\n            return null;\n        }\n\n        window.document.addEventListener('keydown', onKeyDown);\n        return () => {\n            window.document.removeEventListener('keydown', onKeyDown);\n        };\n    }, [onKeyDown]);\n};\n\n\n\nexport default useKey;\n","import React, { useCallback } from 'react';\nimport {Button} from 'rebass';\nimport PropTypes from 'prop-types';\nimport useKey from '../../hooks/useKey';\n\nconst CalculatorButton = ({id, label: key, keyBinding, press, ...props}) => {\n    const onClick = useCallback(() => press(key), [press, key]);\n\n    useKey(onClick, keyBinding);\n\n    return (\n        <Button id={id} bg='#163e7d' onClick={onClick} m={1} {...props}>\n            {key}\n        </Button>\n    );\n};\n\nCalculatorButton.propTypes = {\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    keyBinding: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.string\n    ]).isRequired,\n    press: PropTypes.func.isRequired\n};\n\nexport default CalculatorButton;","import React from 'react';\nimport useCalculator from '../../hooks/useCalculator';\nimport buttons from '../../constants/buttons';\nimport Frame from './Frame.style';\nimport DigitalDisplay from './DigitalDisplay.style';\nimport Buttons from './Buttons.style';\nimport Button from './CalculatorButton';\n\nimport './calculator.css';\n\nconst Calculator = () => {\n    const {displayCurrent, displayFormula, press} = useCalculator();\n    return (\n        <Frame>\n            <DigitalDisplay size='small'>{displayFormula}</DigitalDisplay>\n            <DigitalDisplay size='big' id='display'>{displayCurrent}</DigitalDisplay>\n            <Buttons>\n                {buttons.map((button, index) =>  \n                    <Button key={index} {...button} press={press} sx={{gridArea: button.id}} />\n                )}\n            </Buttons>\n        </Frame>\n    );\n};\n\nexport default Calculator;","import React from 'react';\nimport Calculator from './Calculator';\nimport { useFccTest, FccTests } from '@asteffey/react-fcc-test';\nimport { Flex } from 'rebass';\n\nfunction App() {\n    useFccTest({\n        fccTest: FccTests.javascript_calculator,\n        queryParam: 'fcc-test'\n    });\n\n    return (\n        <Flex alignItems='center' justifyContent='center' height='100vh' bg='#d2d3f7'>\n            <Calculator/>\n        </Flex>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}